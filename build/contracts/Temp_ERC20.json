{
  "fileName": "Temp_ERC20.sol",
  "contractName": "Temp_ERC20",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./ERC20.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract Temp_ERC20 is ERC20,Ownable{\n\n    mapping (address=>uint) private balance;\n\n    mapping (address=>uint) private timeSet;\n\nfunction initialize0() public initializer {\n        initialize();\n        initialize3();\n\n}\nfunction deposit_token(uint _token,uint _min) public {\n        \n        deposit2Contract(_token* (10**18));\n        balance[msg.sender]+=_token* (10**18);\n        timeSet[msg.sender]=now + (_min * 1 minutes);\n}\n\nfunction withdraw_token() public {\n        \n        require(timeSet[msg.sender]<=now,\"There is still some time left before you can withdraw your contract\");\n        require(balance[msg.sender]>0,\"You do not have any tokens Deposited in this contract\");\n        withdrawFromContract(balance[msg.sender]);\n        balance[msg.sender]=0;\n}\n\nfunction updateTime(uint _min) onlyOwner public {\n    require(balance[msg.sender]>0,\"You have no tokens in this contract to set timer off\");\n    timeSet[msg.sender]=now +(_min * 1 minutes);\n}\n}",
  "sourcePath": "contracts/Temp_ERC20.sol",
  "sourceMap": "73:966:7:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:966:7;;;;;;;",
  "deployedSourceMap": "73:966:7:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:966:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2383:193:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2383:193:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;908:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1690:507;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1690:507:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;846:191:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;846:191:7;;;;;;;;;;;;;;;;;:::i;:::-;;1174:119:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1174:119:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1695:145:4;;;:::i;:::-;;381:206:1;;;:::i;:::-;;1072:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1014:154:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1014:154:1;;;;;;;;;;;;;;;;;:::i;:::-;;1299:385;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1299:385:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;802:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;802:100:1;;;;;;;;;;;;;;;;;:::i;:::-;;204:91:7;;;:::i;:::-;;2203:174:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2203:174:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;508:336:7;;;:::i;:::-;;1989:240:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1989:240:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;296:210:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;296:210:7;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;596:200:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;596:200:1;;;;;;;;;;;;;;;;;:::i;:::-;;2383:193;2460:4;2511:6;2476:11;:23;2488:10;2476:23;;;;;;;;;;;;;;;:32;2500:7;2476:32;;;;;;;;;;;;;;;:41;;;;2553:7;2532:37;;2541:10;2532:37;;;2562:6;2532:37;;;;;;;;;;;;;;;;;;2383:193;;;;:::o;908:100::-;963:7;989:12;;982:19;;908:100;:::o;1690:507::-;1821:4;1868:11;:19;1880:6;1868:19;;;;;;;;;;;;;;;:31;1888:10;1868:31;;;;;;;;;;;;;;;;1858:6;:41;;1837:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:8;:16;2022:6;2013:16;;;;;;;;;;;;;;;;2003:6;:26;;1982:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:6;2125:8;:19;2134:9;2125:19;;;;;;;;;;;;;;;;:29;;;;;;;;;;;2184:6;2164:8;:16;2173:6;2164:16;;;;;;;;;;;;;;;;:26;;;;;;;;;;;1690:507;;;;;:::o;846:191:7:-;1286:12:4;:10;:12::i;:::-;1276:22;;:6;;;;;;;;;;;:22;;;1268:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:1:7::1;908:7;:19;916:10;908:19;;;;;;;;;;;;;;;;:21;900:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:9;1017:4;:16;1011:3;:23;991:7;:19;999:10;991:19;;;;;;;;;;;;;;;:43;;;;846:191:::0;:::o;1174:119:1:-;1243:7;1269:8;:17;1278:7;1269:17;;;;;;;;;;;;;;;;1262:24;;1174:119;;;:::o;1695:145:4:-;1286:12;:10;:12::i;:::-;1276:22;;:6;;;;;;;;;;;:22;;;1268:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:1:::1;1764:40;;1785:6;;;;;;;;;;;1764:40;;;;;;;;;;;;1831:1;1814:6;;:19;;;;;;;;;;;;;;;;;;1695:145::o:0;381:206:1:-;1015:12:3;;;;;;;;;;;:31;;;;1031:15;:13;:15::i;:::-;1015:31;:47;;;;1051:11;;;;;;;;;;;1050:12;1015:47;1007:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:19;1143:12;;;;;;;;;;;1142:13;1120:35;;1165:14;1161:80;;;1204:4;1189:12;;:19;;;;;;;;;;;;;;;;;;1230:4;1216:11;;:18;;;;;;;;;;;;;;;;;;1161:80;432:18:1::1;;;;;;;;;;;;;;;;::::0;:4:::1;:18;;;;;;;;;;;;:::i;:::-;;475:16;460:12;:31;;;;524:12;;501:8;:20;510:10;501:20;;;;;;;;;;;;;;;:35;;;;561:10;546:14;;:25;;;;;;;;;;;;;;;;;;1259:14:3::0;1255:55;;;1298:5;1283:12;;:20;;;;;;;;;;;;;;;;;;1255:55;381:206:1;:::o;1072:77:4:-;1110:7;1136:6;;;;;;;;;;;1129:13;;1072:77;:::o;1014:154:1:-;1084:14;;;;;;;;;;;1070:28;;:10;:28;;;1062:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:6;1139:12;;:22;;;;;;;;;;;1014:154;:::o;1299:385::-;1396:4;1448:8;:20;1457:10;1448:20;;;;;;;;;;;;;;;;1438:6;:30;;1417:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:6;1553:8;:19;1562:9;1553:19;;;;;;;;;;;;;;;;:29;;;;;;;;;;;1616:6;1592:8;:20;1601:10;1592:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;1659:9;1638:39;;1647:10;1638:39;;;1670:6;1638:39;;;;;;;;;;;;;;;;;;1299:385;;;;:::o;802:100::-;888:7;864:8;:20;873:10;864:20;;;;;;;;;;;;;;;;:31;;;;;;;;;;;802:100;:::o;204:91:7:-;1015:12:3;;;;;;;;;;;:31;;;;1031:15;:13;:15::i;:::-;1015:31;:47;;;;1051:11;;;;;;;;;;;1050:12;1015:47;1007:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:19;1143:12;;;;;;;;;;;1142:13;1120:35;;1165:14;1161:80;;;1204:4;1189:12;;:19;;;;;;;;;;;;;;;;;;1230:4;1216:11;;:18;;;;;;;;;;;;;;;;;;1161:80;256:12:7::1;:10;:12::i;:::-;278:13;:11;:13::i;:::-;1259:14:3::0;1255:55;;;1298:5;1283:12;;:20;;;;;;;;;;;;;;;;;;1255:55;204:91:7;:::o;2203:174:1:-;2312:7;2342:11;:19;2354:6;2342:19;;;;;;;;;;;;;;;:28;2362:7;2342:28;;;;;;;;;;;;;;;;2335:35;;2203:174;;;;:::o;508:336:7:-;589:3;568:7;:19;576:10;568:19;;;;;;;;;;;;;;;;:24;;560:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;701:1;681:7;:19;689:10;681:19;;;;;;;;;;;;;;;;:21;673:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:41;790:7;:19;798:10;790:19;;;;;;;;;;;;;;;;769:20;:41::i;:::-;840:1;820:7;:19;828:10;820:19;;;;;;;;;;;;;;;:21;;;;508:336::o;1989:240:4:-;1286:12;:10;:12::i;:::-;1276:22;;:6;;;;;;;;;;;:22;;;1268:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:1:::1;2077:22;;:8;:22;;;;2069:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:8;2157:38;;2178:6;;;;;;;;;;;2157:38;;;;;;;;;;;;2214:8;2205:6;;:17;;;;;;;;;;;;;;;;;;1989:240:::0;:::o;296:210:7:-;368:34;394:6;385;:16;368;:34::i;:::-;442:6;433;:16;412:7;:19;420:10;412:19;;;;;;;;;;;;;;;;:37;;;;;;;;;;;493:9;486:4;:16;479:3;:24;459:7;:19;467:10;459:19;;;;;;;;;;;;;;;:44;;;;296:210;;:::o;596:200:1:-;682:7;660:8;:20;669:10;660:20;;;;;;;;;;;;;;;;:29;;652:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:7;758:8;:20;767:10;758:20;;;;;;;;;;;;;;;;:31;;;;;;;;;;;596:200;:::o;557:104:0:-;610:15;644:10;637:17;;557:104;:::o;1400:498:3:-;1447:4;1788:12;1811:4;1788:28;;1822:10;1867:4;1855:17;1849:23;;1892:1;1886:2;:7;1879:14;;;;1400:498;:::o;817:179:4:-;1015:12:3;;;;;;;;;;;:31;;;;1031:15;:13;:15::i;:::-;1015:31;:47;;;;1051:11;;;;;;;;;;;1050:12;1015:47;1007:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:19;1143:12;;;;;;;;;;;1142:13;1120:35;;1165:14;1161:80;;;1204:4;1189:12;;:19;;;;;;;;;;;;;;;;;;1230:4;1216:11;;:18;;;;;;;;;;;;;;;;;;1161:80;871:17:4::1;891:12;:10;:12::i;:::-;871:32;;951:9;918:43;;947:1;918:43;;;;;;;;;;;;980:9;971:6;;:18;;;;;;;;;;;;;;;;;;1247:1:3;1259:14:::0;1255:55;;;1298:5;1283:12;;:20;;;;;;;;;;;;;;;;;;1255:55;817:179:4;:::o;73:966:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit2Contract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_token",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_min",
          "type": "uint256"
        }
      ],
      "name": "deposit_token",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize0",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_min",
          "type": "uint256"
        }
      ],
      "name": "updateTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw_token",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/Temp_ERC20.sol",
    "exportedSymbols": {
      "Temp_ERC20": [
        963
      ]
    },
    "id": 964,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 827,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 828,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 306,
        "src": "25:21:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 829,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 553,
        "src": "47:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 830,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 305,
              "src": "96:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$305",
                "typeString": "contract ERC20"
              }
            },
            "id": 831,
            "nodeType": "InheritanceSpecifier",
            "src": "96:5:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 832,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 552,
              "src": "102:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$552",
                "typeString": "contract Ownable"
              }
            },
            "id": 833,
            "nodeType": "InheritanceSpecifier",
            "src": "102:7:7"
          }
        ],
        "contractDependencies": [
          22,
          305,
          374,
          444,
          552
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 963,
        "linearizedBaseContracts": [
          963,
          552,
          305,
          444,
          22,
          374
        ],
        "name": "Temp_ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 837,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 963,
            "src": "116:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 836,
              "keyType": {
                "id": 834,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "125:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "116:23:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 835,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "134:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 841,
            "name": "timeSet",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 963,
            "src": "162:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 840,
              "keyType": {
                "id": 838,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "171:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "162:23:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 839,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "180:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "246:49:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 846,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "256:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "256:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 848,
                  "nodeType": "ExpressionStatement",
                  "src": "256:12:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 849,
                      "name": "initialize3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "278:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "278:13:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "278:13:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cfba76c0",
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 844,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 843,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 418,
                  "src": "234:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "234:11:7"
              }
            ],
            "name": "initialize0",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:2:7"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "246:0:7"
            },
            "scope": 963,
            "src": "204:91:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "349:157:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 861,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "385:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "394:2:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "398:2:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "394:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 865,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "393:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "385:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 860,
                      "name": "deposit2Contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "368:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "368:34:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 869,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "412:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 872,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "420:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "420:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "412:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "433:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "442:2:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "446:2:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "442:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 877,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "441:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "433:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "412:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "412:37:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 881,
                        "name": "timeSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "459:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 884,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "467:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "467:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "459:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 885,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "479:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 886,
                              "name": "_min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "486:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "493:9:7",
                              "subdenomination": "minutes",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "1"
                            },
                            "src": "486:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 889,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "485:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "479:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "459:44:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "459:44:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f5fab0e0",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit_token",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 894,
                  "src": "319:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 857,
                  "name": "_min",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 894,
                  "src": "331:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:23:7"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:0:7"
            },
            "scope": 963,
            "src": "296:210:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "541:303:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 898,
                            "name": "timeSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "568:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 901,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 899,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "576:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "576:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "568:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "589:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "568:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468657265206973207374696c6c20736f6d652074696d65206c656674206265666f726520796f752063616e20776974686472617720796f757220636f6e7472616374",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "593:69:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e1c11eacc30d53687582dd61251965934bf1f478b2b46afa7d29d8d9f04ca34",
                          "typeString": "literal_string \"There is still some time left before you can withdraw your contract\""
                        },
                        "value": "There is still some time left before you can withdraw your contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e1c11eacc30d53687582dd61251965934bf1f478b2b46afa7d29d8d9f04ca34",
                          "typeString": "literal_string \"There is still some time left before you can withdraw your contract\""
                        }
                      ],
                      "id": 897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        981,
                        982
                      ],
                      "referencedDeclaration": 982,
                      "src": "560:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:103:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "560:103:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 908,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "681:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 911,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 909,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "689:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "689:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "681:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "701:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "681:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f206e6f74206861766520616e7920746f6b656e73204465706f736974656420696e207468697320636f6e7472616374",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "703:55:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9da5ee469dde947a9c80a1b27f024fb33c52442d6f3b2ed237bc7a617e9e8068",
                          "typeString": "literal_string \"You do not have any tokens Deposited in this contract\""
                        },
                        "value": "You do not have any tokens Deposited in this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9da5ee469dde947a9c80a1b27f024fb33c52442d6f3b2ed237bc7a617e9e8068",
                          "typeString": "literal_string \"You do not have any tokens Deposited in this contract\""
                        }
                      ],
                      "id": 907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        981,
                        982
                      ],
                      "referencedDeclaration": 982,
                      "src": "673:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:86:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "673:86:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 918,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 837,
                          "src": "790:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 921,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 919,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "798:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "798:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "790:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 917,
                      "name": "withdrawFromContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "769:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "769:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "769:41:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 924,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "820:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 927,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 925,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "828:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "828:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "820:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "840:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "820:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "820:21:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ea98321e",
            "id": 932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw_token",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:2:7"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:0:7"
            },
            "scope": 963,
            "src": "508:336:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "894:143:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 940,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "908:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 943,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 941,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "916:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "916:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "908:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "928:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "908:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752068617665206e6f20746f6b656e7320696e207468697320636f6e747261637420746f207365742074696d6572206f6666",
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "930:54:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c129c068ea4717d9d03dea1b25e43f9bab035d04775dbf92652f6d8204f4c1c6",
                          "typeString": "literal_string \"You have no tokens in this contract to set timer off\""
                        },
                        "value": "You have no tokens in this contract to set timer off"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c129c068ea4717d9d03dea1b25e43f9bab035d04775dbf92652f6d8204f4c1c6",
                          "typeString": "literal_string \"You have no tokens in this contract to set timer off\""
                        }
                      ],
                      "id": 939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        981,
                        982
                      ],
                      "referencedDeclaration": 982,
                      "src": "900:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:85:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "900:85:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 949,
                        "name": "timeSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "991:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 952,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 950,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "999:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "999:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "991:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 953,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "1011:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "_min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "1017:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1024:9:7",
                              "subdenomination": "minutes",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "1"
                            },
                            "src": "1017:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 957,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1016:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1011:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "991:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "991:43:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6c59bd0c",
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 937,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 936,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 501,
                  "src": "877:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "877:9:7"
              }
            ],
            "name": "updateTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "name": "_min",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 962,
                  "src": "866:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "865:11:7"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:0:7"
            },
            "scope": 963,
            "src": "846:191:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 964,
        "src": "73:966:7"
      }
    ],
    "src": "0:1039:7"
  },
  "bytecode": "0x608060405234801561001057600080fd5b50611bcb806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a0712d68116100a2578063dd62ed3e11610071578063dd62ed3e146103ca578063ea98321e14610442578063f2fde38b1461044c578063f5fab0e014610490578063fbd497dc146104c85761010b565b8063a0712d68146102fe578063a9059cbb1461032c578063aeae547d14610392578063cfba76c0146103c05761010b565b806370a08231116100de57806370a0823114610248578063715018a6146102a05780638129fc1c146102aa5780638da5cb5b146102b45761010b565b8063095ea7b31461011057806318160ddd1461017657806323b872dd146101945780636c59bd0c1461021a575b600080fd5b61015c6004803603604081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104f6565b604051808215151515815260200191505060405180910390f35b61017e6105e4565b6040518082815260200191505060405180910390f35b610200600480360360608110156101aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ee565b604051808215151515815260200191505060405180910390f35b6102466004803603602081101561023057600080fd5b81019080803590602001909291905050506107fe565b005b61028a6004803603602081101561025e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ac565b6040518082815260200191505060405180910390f35b6102a86109f5565b005b6102b2610b80565b005b6102bc610d63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61032a6004803603602081101561031457600080fd5b8101908080359060200190929190505050610d8d565b005b6103786004803603604081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e63565b604051808215151515815260200191505060405180910390f35b6103be600480360360208110156103a857600080fd5b8101908080359060200190929190505050611002565b005b6103c8611052565b005b61042c600480360360408110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611161565b6040518082815260200191505060405180910390f35b61044a6111e8565b005b61048e6004803603602081101561046257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a7565b005b6104c6600480360360408110156104a657600080fd5b8101908080359060200190929190803590602001909291905050506115b7565b005b6104f4600480360360208110156104de57600080fd5b810190808035906020019092919050505061166e565b005b600081603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a392915050565b6000603354905090565b6000603660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156106c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611a9f602f913960400191505060405180910390fd5b603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180611a63603c913960400191505060405180910390fd5b81603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055509392505050565b610806611756565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611b626034913960400191505060405180910390fd5b603c81024201603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6000603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109fd611756565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610abf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff1680610b9f5750610b9e61175e565b5b80610bb657506000809054906101000a900460ff16155b610c0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b34602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c5b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6040518060400160405280600981526020017f44616e5f546f6b656e000000000000000000000000000000000000000000000081525060379080519060200190610ca692919061191d565b5069021e19e0c9bab2400000603381905550603354603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033603860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d605760008060016101000a81548160ff0219169083151502179055505b50565b6000603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f6e6c79204f776e65722063616e206d696e7420746f6b656e7300000000000081525060200191505060405180910390fd5b8060336000828254019250508190555050565b6000603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611ace6031913960400191505060405180910390fd5b81603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a392915050565b80603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b600060019054906101000a900460ff1680611071575061107061175e565b5b8061108857506000809054906101000a900460ff16155b6110dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b34602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561112d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611135610b80565b61113d611775565b801561115e5760008060016101000a81548160ff0219169083151502179055505b50565b6000603660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b42603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611280576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526043815260200180611a206043913960600191505060405180910390fd5b6000603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611318576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180611aff6035913960400191505060405180910390fd5b611360603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611002565b6000603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6113af611756565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119fa6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6115ca670de0b6b3a7640000830261166e565b670de0b6b3a76400008202603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550603c81024201603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b80603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806119c36037913960400191505060405180910390fd5b80603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b600033905090565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff1680611794575061179361175e565b5b806117ab57506000809054906101000a900460ff16155b611800576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b34602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611850576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600061185a611756565b90508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050801561191a5760008060016101000a81548160ff0219169083151502179055505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061195e57805160ff191683800117855561198c565b8280016001018555821561198c579182015b8281111561198b578251825591602001919060010190611970565b5b509050611999919061199d565b5090565b6119bf91905b808211156119bb5760008160009055506001016119a3565b5090565b9056fe5573657220646f6573206e6f74206f776e2072657175657374656420616d6f756e74206f6620746f6b656e7320746f204465706f7369744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735468657265206973207374696c6c20736f6d652074696d65206c656674206265666f726520796f752063616e20776974686472617720796f757220636f6e7472616374496e7075747465642053656e64657220646f6573206e6f742068617665207468652072657175657374656420616d6f756e74206f6620746f6b656e73416d6f756e7420696e7075747465642069732067726561746572207468616e20617070726f76656420616d6f756e74416d6f756e7420696e7075747465642069732067726561746572207468616e20616d6f756e742073656e64657220686173596f7520646f206e6f74206861766520616e7920746f6b656e73204465706f736974656420696e207468697320636f6e7472616374436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564596f752068617665206e6f20746f6b656e7320696e207468697320636f6e747261637420746f207365742074696d6572206f6666a26469706673582212201bff515676165c6cb932597e11c838284d71d410c8f71a2b74175d710ac7143e64736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a0712d68116100a2578063dd62ed3e11610071578063dd62ed3e146103ca578063ea98321e14610442578063f2fde38b1461044c578063f5fab0e014610490578063fbd497dc146104c85761010b565b8063a0712d68146102fe578063a9059cbb1461032c578063aeae547d14610392578063cfba76c0146103c05761010b565b806370a08231116100de57806370a0823114610248578063715018a6146102a05780638129fc1c146102aa5780638da5cb5b146102b45761010b565b8063095ea7b31461011057806318160ddd1461017657806323b872dd146101945780636c59bd0c1461021a575b600080fd5b61015c6004803603604081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104f6565b604051808215151515815260200191505060405180910390f35b61017e6105e4565b6040518082815260200191505060405180910390f35b610200600480360360608110156101aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ee565b604051808215151515815260200191505060405180910390f35b6102466004803603602081101561023057600080fd5b81019080803590602001909291905050506107fe565b005b61028a6004803603602081101561025e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ac565b6040518082815260200191505060405180910390f35b6102a86109f5565b005b6102b2610b80565b005b6102bc610d63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61032a6004803603602081101561031457600080fd5b8101908080359060200190929190505050610d8d565b005b6103786004803603604081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e63565b604051808215151515815260200191505060405180910390f35b6103be600480360360208110156103a857600080fd5b8101908080359060200190929190505050611002565b005b6103c8611052565b005b61042c600480360360408110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611161565b6040518082815260200191505060405180910390f35b61044a6111e8565b005b61048e6004803603602081101561046257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a7565b005b6104c6600480360360408110156104a657600080fd5b8101908080359060200190929190803590602001909291905050506115b7565b005b6104f4600480360360208110156104de57600080fd5b810190808035906020019092919050505061166e565b005b600081603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a392915050565b6000603354905090565b6000603660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156106c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611a9f602f913960400191505060405180910390fd5b603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180611a63603c913960400191505060405180910390fd5b81603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055509392505050565b610806611756565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611b626034913960400191505060405180910390fd5b603c81024201603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6000603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109fd611756565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610abf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff1680610b9f5750610b9e61175e565b5b80610bb657506000809054906101000a900460ff16155b610c0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b34602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c5b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6040518060400160405280600981526020017f44616e5f546f6b656e000000000000000000000000000000000000000000000081525060379080519060200190610ca692919061191d565b5069021e19e0c9bab2400000603381905550603354603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033603860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d605760008060016101000a81548160ff0219169083151502179055505b50565b6000603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f6e6c79204f776e65722063616e206d696e7420746f6b656e7300000000000081525060200191505060405180910390fd5b8060336000828254019250508190555050565b6000603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611ace6031913960400191505060405180910390fd5b81603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a392915050565b80603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b600060019054906101000a900460ff1680611071575061107061175e565b5b8061108857506000809054906101000a900460ff16155b6110dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b34602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561112d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611135610b80565b61113d611775565b801561115e5760008060016101000a81548160ff0219169083151502179055505b50565b6000603660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b42603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611280576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526043815260200180611a206043913960600191505060405180910390fd5b6000603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611318576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180611aff6035913960400191505060405180910390fd5b611360603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611002565b6000603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6113af611756565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119fa6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6115ca670de0b6b3a7640000830261166e565b670de0b6b3a76400008202603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550603c81024201603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b80603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806119c36037913960400191505060405180910390fd5b80603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b600033905090565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff1680611794575061179361175e565b5b806117ab57506000809054906101000a900460ff16155b611800576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b34602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611850576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600061185a611756565b90508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050801561191a5760008060016101000a81548160ff0219169083151502179055505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061195e57805160ff191683800117855561198c565b8280016001018555821561198c579182015b8281111561198b578251825591602001919060010190611970565b5b509050611999919061199d565b5090565b6119bf91905b808211156119bb5760008160009055506001016119a3565b5090565b9056fe5573657220646f6573206e6f74206f776e2072657175657374656420616d6f756e74206f6620746f6b656e7320746f204465706f7369744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735468657265206973207374696c6c20736f6d652074696d65206c656674206265666f726520796f752063616e20776974686472617720796f757220636f6e7472616374496e7075747465642053656e64657220646f6573206e6f742068617665207468652072657175657374656420616d6f756e74206f6620746f6b656e73416d6f756e7420696e7075747465642069732067726561746572207468616e20617070726f76656420616d6f756e74416d6f756e7420696e7075747465642069732067726561746572207468616e20616d6f756e742073656e64657220686173596f7520646f206e6f74206861766520616e7920746f6b656e73204465706f736974656420696e207468697320636f6e7472616374436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564596f752068617665206e6f20746f6b656e7320696e207468697320636f6e747261637420746f207365742074696d6572206f6666a26469706673582212201bff515676165c6cb932597e11c838284d71d410c8f71a2b74175d710ac7143e64736f6c63430006000033",
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  },
  "networks": {
    "1598432606065": {
      "links": {},
      "events": {},
      "address": "0xe53aD0cA776e166eb105d4fc7F75FAE3011C821E",
      "updated_at": 1598442145587
    }
  }
}
